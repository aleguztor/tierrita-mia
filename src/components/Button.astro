---
interface Props {
  id: string
  type?: 'link' | 'button' | 'icon'
  text?: string
  link: {
    link: string
    newTab: boolean
  }
}
const { id, type = 'button', text, link } = Astro.props
---

<a href={link.link} target={link.newTab ? '_blank' : '_self'} id={id} class={type}><slot /><p>{text}</p></a>

<style>
  .link {
  }
  .button {
    cursor: pointer;
    padding: 10px 20px;
    border: none;
    border-radius: 2px;
    background-color: var(--link);
    text-decoration: none;
    font-size: 20px;
    font-weight: 400;
    color: var(--primary);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 5px;
    p {
      text-align: center;
      font-weight: 700;
    }
  }
  .button:hover {
    background-color: var(--primary);
    color: var(--link);
  }
</style>
<script define:vars={{ link, id }}>
  const button = document.getElementById(id)
  if (button) {
    button.addEventListener('click', () => (window.location.href = link.link))
  }
</script>
